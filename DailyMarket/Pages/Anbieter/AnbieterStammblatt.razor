@page "/anbieter"

@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@using System.Reflection.Metadata
@using DailyMarketData.Repositorys
@using DailyMarketData.Models
@inject AnbieterRepository AnbieterRepo

<h3>Anbieter</h3>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Vorname</th>
            <th>Nachname</th>
            <th>Mitglied</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var a in AnbieterList)
        {
            <tr>
                <td>@a.Id</td>
                <td>@a.Vorname</td>
                <td>@a.Nachname</td>
                <td>@a.IsMitglied</td>
                <td><button class="btn btn-primary" @onclick="@(new Action( () => NavigateToAnbieterEdit(a.Id)))">Bearbeiten</button></td>
                <td><button class="btn btn-danger" @onclick="@(new Action( ()=> DeleteAnbieter(a.Id)))">Löschen</button></td>
            </tr>
        }

    </tbody>
</table>
<button class="btn btn-primary" @onclick="NavigateToAnbieterCreate">Neuer Anbieter</button>

@code {
    protected List<Anbieter> AnbieterList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AnbieterList = await AnbieterRepo.GetAnbieterAsync();
    }

    void DeleteAnbieter(int id)
    {
        AnbieterRepo.DeleteAnbieterAsync(id);
        Anbieter removeAnbieter = AnbieterList.SingleOrDefault(x => x.Id == id);
        if (removeAnbieter != null)
        {
            AnbieterList.Remove(removeAnbieter);
        }
    }

    void NavigateToAnbieterEdit(int id)
    {
        NavigationManager.NavigateTo($"anbieter/{id}");
    }

    void NavigateToAnbieterCreate()
    {
        NavigationManager.NavigateTo("anbieter/create");
    }
}
