@page "/abotyp/create"
@page "/abotyp/{Id:int}"

@inject NavigationManager NavigationManager
@inject AbotypRepository AbotypRepo
@using System.Security.Claims
@using DailyMarketData.Repositorys
@using DailyMarketData.Models
@using Microsoft.AspNetCore.Components

<h3>@title</h3>

<EditForm Model="@abotyp" OnValidSubmit="@SaveAbo">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label for="Bezeichnung">Bezeichnung: </label>
        <InputText id="Bezeichnung" @bind-Value="@abotyp.Bezeichnung" />
    </p>
    <p>
        <label for="Beschreibung">Beschreibung: </label>
        <InputTextArea id="Beschreibung" @bind-Value="@abotyp.Beschreibung" />
    </p>
    <p>
        <label for="AnzahlBelegungNoetig">Anzahl Belegung nötig: </label>
        <InputNumber id="AnzahlBelegungNoetig" @bind-Value="@abotyp.AnzahlBelegungNoetig" />
    </p>
    <p>
        <label for="Mietdauer">Mietdauer in Tage: </label>
        <InputNumber id="Mietdauer" @bind-Value="@abotyp.Mietdauer" />
    </p>
    <p>
        <label for="RabattInProzent">Rabatt in %: </label>
        <InputNumber id="RabattInProzent" @bind-Value="@abotyp.RabattInProzent" />
     </p>
    <p>
        <label for="GueltigVon">Gültig von: </label>
        <InputDate id="GueltigVon" @bind-Value="@abotyp.GueltigVon" />
    </p>
    <p>
        <label for="GueltigBis">Gültig bis: </label>
        <InputDate id="GueltigBis" @bind-Value="@abotyp.GueltigBis" />
    </p>

    <button class="btn btn-primary" type="submit">@submitBtnText</button>
</EditForm>
    <button class="btn btn-danger mt-3" @onclick="NavigateToAbotyp">Abbrechen</button>

@code {
    [Parameter]
    public int? Id { get; set; }

    [CascadingParameter] Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private Abotyp abotyp = new Abotyp();

    private string title;

    private string submitBtnText;

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            abotyp = await AbotypRepo.GetAbotypAsync(Id.Value);
            title = "Abotyp bearbeiten";
            submitBtnText = "Speichern";
        }
        else
        {
            title = "Neuer Abotyp erfassen";
            submitBtnText = "Abotyp erfassen";
        }
    }

    private void NavigateToAbotyp()
    {
        NavigationManager.NavigateTo("abotyp");
    }

    private async Task SaveAbo()
    {
        AuthenticationState authState = await AuthenticationStateTask;
        ClaimsPrincipal user = authState.User;

        if (Id.HasValue)
        {
            abotyp.UpdatedBy = user.Identity.Name;
            AbotypRepo.UpdateAbotyp(abotyp);
        }
        else
        {
            abotyp.CreatedBy = user.Identity.Name;
            AbotypRepo.CreateAbotyp(abotyp);
        }
        NavigateToAbotyp();
    }

}
